{"version":3,"sources":["components/Search.js","redux/search/search.actions.js","redux/restaurants/restaurants.actions.js","containers/SearchContainer.js","img/default-food-image.png","components/Restaurants.js","containers/RestaurantsContainer.js","App.js","services/CitiesApi.js","services/RestaurantsApi.js","redux/restaurants/restaurants.sagas.js","redux/saga.js","redux/store.js","redux/search/search.reducers.js","redux/restaurants/restaurants.reducers.js","index.js"],"names":["Search","inputValue","refineValue","fetchRestaurants","handleInputCityValue","handleInputOtherValue","className","id","onSubmit","e","preventDefault","type","placeholder","defaultValue","onChange","x","y","viewBox","d","INPUT_CITY_VALUE","INPUT_OTHER_VALUE","FETCH_RESTAURANTS","FETCH_RESTAURANTS_SUCCESS","fetchRestaurantsSuccessAction","restaurants","SearchBar","connect","state","searchInput","dispatch","value","action","target","fetchRestaurantsAction","Restaurants","length","map","restaurant","src","thumb","alt","name","cuisines","location","address","RestaurantsList","App","CitiesApi","get","cities","axios","method","url","headers","Accept","RestaurantsApi","getMore","watchRestaurants","call","city","data","location_suggestions","put","console","log","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.943d43eb.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({\n  inputValue,\n  refineValue,\n  fetchRestaurants,\n  handleInputCityValue,\n  handleInputOtherValue,\n}) => {\n  return (\n    <div className=\"search-container\">\n      <div>\n        <h1 className=\"search-title\">Finding Restaurants</h1>\n        <h3 className=\"search-slogan\">\n          Discover the best food &amp; drinks in the world\n        </h3>\n        <form\n          id=\"search-form\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            fetchRestaurants(inputValue, refineValue);\n          }}\n        >\n          <div>\n            <input\n              type=\"text\"\n              className=\"search-city\"\n              placeholder=\"City, e.g., Toronto\"\n              defaultValue={inputValue}\n              onChange={handleInputCityValue}\n            />\n            <input\n              type=\"text\"\n              className=\"search-keywords\"\n              placeholder=\"Search for any keywords ...\"\n              defaultValue={refineValue}\n              onChange={handleInputOtherValue}\n            />\n          </div>\n          <button className=\"search-btn\" type=\"submit\">\n            <svg x=\"0px\" y=\"0px\" viewBox=\"0 0 384 380.2\">\n              <path\n                d=\"M377.2,357.6l-81.5-81.5c56.2-65.3,53.4-164.3-8.5-226.2C255.7,18.5,213.9,1.2,169.5,1.2C125,1.2,83.2,18.5,51.8,49.9\n\tc-64.9,64.9-64.9,170.4,0,235.3C83.2,316.7,125,334,169.5,334c40.3,0,78.3-14.2,108.5-40.2l81.5,81.5c2.4,2.4,5.6,3.7,8.8,3.7\n\ts6.4-1.2,8.8-3.7C382.1,370.4,382.1,362.5,377.2,357.6z M169.5,309c-37.8,0-73.3-14.7-100-41.4c-55.1-55.1-55.1-144.8,0-200\n\tc27.6-27.6,63.8-41.3,100-41.3c36.2,0,72.4,13.8,100,41.3c55.1,55.1,55.1,144.8,0,200C242.8,294.3,207.2,309,169.5,309z\"\n              />\n            </svg>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  refineValue: PropTypes.string.isRequired,\n  fetchRestaurants: PropTypes.func.isRequired,\n  handleInputCityValue: PropTypes.func.isRequired,\n  handleInputOtherValue: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","export const INPUT_CITY_VALUE = \"search/INPUT_CITY_VALUE\";\nexport const INPUT_OTHER_VALUE = \"search/INPUT_OTHER_VALUE\";\n\nexport const inputCityValueAction = (value) => ({\n  type: INPUT_CITY_VALUE,\n  value,\n});\n\nexport const inputOtherValueAction = (value) => ({\n  type: INPUT_OTHER_VALUE,\n  value,\n});","export const FETCH_RESTAURANTS = \"restaurants/FETCH_RESTAURANTS\";\nexport const FETCH_RESTAURANTS_SUCCESS =\n  \"restaurants/FETCH_RESTAURANTS_SUCCESS\";\n\nexport const fetchRestaurantsAction = (inputValue, refineValue) => ({\n  type: FETCH_RESTAURANTS,\n  inputValue,\n  refineValue,\n});\n\nexport const fetchRestaurantsSuccessAction = (restaurants) => ({\n  type: FETCH_RESTAURANTS_SUCCESS,\n  restaurants,\n});\n","import { connect } from \"react-redux\";\nimport Search from \"../components/Search\";\nimport {\n  inputCityValueAction,\n  inputOtherValueAction,\n} from \"../redux/search/search.actions\";\nimport { fetchRestaurantsAction } from \"../redux/restaurants/restaurants.actions\";\n\nconst mapStateToProps = (state) => ({\n  inputValue: state.searchInput,\n  refineValue: state.refineValue,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleInputCityValue: (e) => {\n    const action = inputCityValueAction(e.target.value);\n    dispatch(action);\n  },\n  handleInputOtherValue: (e) => {\n    const action = inputOtherValueAction(e.target.value);\n    dispatch(action);\n  },\n  fetchRestaurants: (inputValue, refineValue) => {\n    const action = fetchRestaurantsAction(inputValue, refineValue);\n    dispatch(action);\n  },\n});\n\nconst SearchBar = connect(mapStateToProps, mapDispatchToProps)(Search);\n\nexport default SearchBar;\n","export default __webpack_public_path__ + \"static/media/default-food-image.88bd18c9.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport thumb from \"../img/default-food-image.png\";\n\nconst Restaurants = ({ restaurants }) => {\n  return (\n    <div>\n      {restaurants.length === 0 ? (\n        <div className=\"no-results\">Nothing's Here</div>\n      ) : (\n        <div className=\"restaurants-container\">\n          {restaurants.map((restaurant) => {\n            return (\n              <div\n                className=\"restaurant-container\"\n                key={restaurant.restaurant.id}\n              >\n                <div className=\"restaurant-thumb\">\n                  <img src={restaurant.restaurant.thumb || thumb} alt=\"\" />\n                </div>\n                <div className=\"restaurant-content\">\n                  <div>\n                    <div className=\"restaurant-title\">\n                      {restaurant.restaurant.name}\n                    </div>\n                    <div className=\"restaurant-cuisines\">\n                      {restaurant.restaurant.cuisines}\n                    </div>\n                  </div>\n                  <div className=\"restaurant-address\">\n                    {restaurant.restaurant.location.address}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nRestaurants.propTypes = {\n  restaurants: PropTypes.arrayOf(\n    PropTypes.shape({\n      restaurant: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        thumb: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        cuisines: PropTypes.string.isRequired,\n        location: PropTypes.shape({\n          address: PropTypes.string.isRequired,\n        }).isRequired,\n      }),\n    })\n  ).isRequired,\n};\n\nexport default Restaurants;\n","import { connect } from \"react-redux\";\nimport Restaurants from \"../components/Restaurants\";\n\nconst mapStateToProps = (state) => ({\n  restaurants: state.restaurants,\n});\n\nconst RestaurantsList = connect(mapStateToProps)(Restaurants);\n\nexport default RestaurantsList;\n","import SearchBar from \"./containers/SearchContainer\";\nimport RestaurantsList from \"./containers/RestaurantsContainer\";\n\nfunction App() {\n  return (\n    <div>\n      <SearchBar></SearchBar>\n      <RestaurantsList></RestaurantsList>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nconst CitiesApi = {\n  async get(inputValue) {\n    const cities = axios({\n      method: \"GET\",\n      url: `https://developers.zomato.com/api/v2.1/cities?q=${inputValue}`,\n      headers: {\n        \"user-key\": \"f111df1abdd6e0c868fbefc8428b5137\",\n        Accept: \"application/json\",\n      },\n    });\n    return await cities;\n  },\n};\n\nexport default CitiesApi;\n","import axios from \"axios\";\n\nconst RestaurantsApi = {\n  async get(id, refineValue) {\n    const restaurants = axios({\n      method: \"GET\",\n      url: `https://developers.zomato.com/api/v2.1/search?entity_id=${id}&entity_type=city&q=${refineValue}`,\n      headers: {\n        \"user-key\": \"f111df1abdd6e0c868fbefc8428b5137\",\n        Accept: \"application/json\",\n      },\n    });\n    return await restaurants;\n  },\n  \n  async getMore(id) {\n    const restaurants = axios({\n      method: \"GET\",\n      url: `https://developers.zomato.com/api/v2.1/search?entity_id=${id}&entity_type=city`,\n      headers: {\n        \"user-key\": \"f111df1abdd6e0c868fbefc8428b5137\",\n        Accept: \"application/json\",\n      },\n    });\n    return await restaurants;\n  }\n};\n\nexport default RestaurantsApi;\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_RESTAURANTS } from \"./restaurants.actions\";\nimport { fetchRestaurantsSuccessAction } from \"./restaurants.actions\";\nimport CitiesApi from \"../../services/CitiesApi.js\";\nimport RestaurantsApi from \"../../services/RestaurantsApi.js\";\n\nexport function* fetchRestaurants(action) {\n  try {\n    const cities = yield call(CitiesApi.get, action.inputValue);\n    const city = cities.data.location_suggestions[0];\n    if (city) {\n      if (action.refineValue) {\n        const restaurants = yield call(\n          RestaurantsApi.get,\n          city.id,\n          action.refineValue\n        );\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      } else {\n        const restaurants = yield call(RestaurantsApi.getMore, city.id);\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      }\n    } else {\n      yield put(fetchRestaurantsSuccessAction([]));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchRestaurants() {\n  yield takeLatest(FETCH_RESTAURANTS, fetchRestaurants);\n}\n","import { all } from \"redux-saga/effects\";\nimport { watchRestaurants } from \"./restaurants/restaurants.sagas\";\n// import { watchCity } from \"./city/city.sagas\";\n\nexport default function* rootSaga() {\n  // yield all([watchRestaurants(), watchCity()]);\n  yield all([watchRestaurants(),]);\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport { searchReducer, refineReducer } from \"./search/search.reducers\";\nimport { restaurants } from \"./restaurants/restaurants.reducers\";\n// import { cityId } from \"./city/city.reducers\";\n\nimport rootSaga from \"./saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const rootReducer = combineReducers({\n  searchInput: searchReducer,\n  restaurants: restaurants,\n  refineValue: refineReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import { INPUT_CITY_VALUE, INPUT_OTHER_VALUE } from \"./search.actions\";\n\nexport const searchReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case INPUT_CITY_VALUE:\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nexport const refineReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case INPUT_OTHER_VALUE:\n      return action.value;\n    default:\n      return state;\n  }\n};\n","import { FETCH_RESTAURANTS_SUCCESS } from \"./restaurants.actions\";\n\nexport const restaurants = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_RESTAURANTS_SUCCESS:\n      return [ ...action.restaurants ];\n    default:\n      return state;\n  }\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}